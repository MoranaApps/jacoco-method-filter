name: Publish / Release (manual)

on:
  workflow_dispatch:
    inputs:
      doRelease:
        description: "After publishing, call sonatypeCentralRelease?"
        type: choice
        options: [ "yes", "no" ]
        default: "yes"

jobs:
  publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17
          cache: sbt

      - name: Install sbt (sbt-extras)
        run: |
          curl -fsSL https://raw.githubusercontent.com/dwijnand/sbt-extras/master/sbt -o sbt
          chmod +x sbt
          sudo mv sbt /usr/local/bin/

      - name: Import GPG private key
        run: |
          echo "${PGP_SECRET}" | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
        env:
          PGP_SECRET: ${{ secrets.PGP_SECRET }}

      - name: Show sbt & Java
        run: |
          java -version
          sbt sbtVersion

      - name: Clean previous local bundle
        run: rm -rf **/target/sonatype-staging || true

      - name: Test (core)
        run: sbt "project rewriterCore" clean test

      - name: Publish signed (core)
        run: sbt "project rewriterCore" publishSigned
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          PGP_PASSPHRASE:    ${{ secrets.PGP_PASSPHRASE }}

      - name: Upload staged bundle (debug artifact)
        run: |
          set -euo pipefail
          echo "Scanning for sonatype-staging folders..."
          mapfile -t ROOTS < <(find . -type d -name sonatype-staging | sort)

          if [ "${#ROOTS[@]}" -eq 0 ]; then
            echo "No staging dir found"
            echo "Debug: show target dirs nearby:"
            find . -maxdepth 5 -type d -name target -print | sort || true
            exit 1
          fi

          mkdir -p artifacts

          for ROOT in "${ROOTS[@]}"; do
            TARGET_DIR="$(dirname "$ROOT")"         # .../target
            MODULE_DIR="$(dirname "$TARGET_DIR")"   # module dir
            MOD_NAME="$(basename "$MODULE_DIR")"
            [ "$MOD_NAME" = "." ] && MOD_NAME="root"

            ZIP="artifacts/${MOD_NAME}-sonatype-staging.zip"
            echo "Zipping $ROOT -> $ZIP"
            (cd "$TARGET_DIR" && zip -r "$GITHUB_WORKSPACE/$ZIP" sonatype-staging)
            echo "Created $ZIP"
          done
        shell: bash

      - name: Upload artifact (staged bundles)
        uses: actions/upload-artifact@v4
        with:
          name: sonatype-staging-bundles
          path: artifacts/*.zip
          if-no-files-found: error

      - name: Release to Central (sonatypeCentralRelease)
        if: ${{ inputs.doRelease == 'yes' }}
        run: sbt sonatypeCentralRelease
        env:
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
